@model ControleContentoresV2.Models.movimentacao

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar recebimento</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.Label("RT DE LOAD", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rt_load, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rt_load, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("DATA DE LOAD", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dt_load, new { htmlAttributes = new { @class = "form-control",type = "date", Value = Model.dt_load.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.dt_load, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("PRODUTO QUÍMICO", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idProduto", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idProduto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("VOLUME", "VOLUME", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idVolume", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idVolume, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("ID DO CONTENTOR", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.id_embalagem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.id_embalagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.idSituacao, "idSituacao", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idSituacao", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idSituacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.dt_uso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dt_uso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dt_uso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.rt_backload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rt_backload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rt_backload, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.dt_backload, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dt_backload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dt_backload, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display: none;">
            @Html.LabelFor(model => model.comentario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.comentario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.comentario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retornar para lista", "Create")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
